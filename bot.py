from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from config import BOT_TOKEN
from utils import generate_text
from collections import defaultdict

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ª–∏–º–∏—Ç–æ–≤
user_requests = defaultdict(int)
FREE_LIMIT = 5

# –ú–µ–Ω—é-–∫–Ω–æ–ø–∫–∏
menu_kb = ReplyKeyboardMarkup(resize_keyboard=True)
menu_kb.add(
    KeyboardButton("‚úçÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç"),
    KeyboardButton("üí° –ò–¥–µ—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞"),
)
menu_kb.add(
    KeyboardButton("üòÇ –®—É—Ç–∫–∞"),
    KeyboardButton("üìú –¶–∏—Ç–∞—Ç–∞"),
    KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º"),
)

@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    await message.reply(
        "–ü—Ä–∏–≤–µ—Ç! –Ø Genix AI ü§ñ\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å:",
        reply_markup=menu_kb
    )

@dp.message_handler(commands=['donate'])
async def donate_cmd(message: types.Message):
    donate_text = (
        "üôè –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—à—å—Å—è Genix AI!\n\n"
        "–¢—ã –º–æ–∂–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç —á–µ—Ä–µ–∑:\n"
        "üí∞ Boosty: https://boosty.to/—Ç–≤–æ—è_—Å—Å—ã–ª–∫–∞\n"
        "üí≥ QIWI/–°–ë–ü: +7 999 XXX XX XX\n\n"
        "–ü–æ—Å–ª–µ –¥–æ–Ω–∞—Ç–∞ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –≤ Telegram, –∏ —è –≤–∫–ª—é—á—É —Ç–µ–±–µ –±–µ–∑–ª–∏–º–∏—Ç üöÄ"
    )
    await message.reply(donate_text)

@dp.message_handler()
async def handle_text(message: types.Message):
    user_id = message.from_user.id

    if user_requests[user_id] >= FREE_LIMIT:
        await message.reply(
            "üîí –¢—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏–º–∏—Ç –∏–∑ 5 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π —Å–µ–≥–æ–¥–Ω—è.\n"
            "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–µ–∑–ª–∏–º–∏—Ç ‚Äî –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /donate üí∞"
        )
        return

    prompt_map = {
        "‚úçÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç": "–ù–∞–ø–∏—à–∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Å—Ç –¥–ª—è Telegram",
        "üí° –ò–¥–µ—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞": "–ü—Ä–µ–¥–ª–æ–∂–∏ —É–Ω–∏–∫–∞–ª—å–Ω—É—é –±–∏–∑–Ω–µ—Å-–∏–¥–µ—é",
        "üòÇ –®—É—Ç–∫–∞": "–†–∞—Å—Å–∫–∞–∂–∏ –≤–µ—Å—ë–ª—É—é –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —à—É—Ç–∫—É",
        "üìú –¶–∏—Ç–∞—Ç–∞": "–ü–æ–¥–µ–ª–∏—Å—å –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–π —Ü–∏—Ç–∞—Ç–æ–π",
        "üé≤ –†–∞–Ω–¥–æ–º": "–ü—Ä–∏–¥—É–º–∞–π —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–µ–æ–±—ã—á–Ω–æ–µ –∏ –ø—Ä–∏–∫–æ–ª—å–Ω–æ–µ",
    }

    user_input = message.text
    prompt = prompt_map.get(user_input, user_input)

    await message.reply("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é...")
    result = generate_text(prompt)
    await message.reply(result)

    user_requests[user_id] += 1

if __name__ == "__main__":
    executor.start_polling(dp)
